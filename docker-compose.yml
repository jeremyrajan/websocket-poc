version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: websocket-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: websocket-backend
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  socketio-server:
    build:
      context: ./socketio-server
      dockerfile: Dockerfile
    container_name: websocket-socketio
    ports:
      - "3001:3001"
    environment:
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - PORT=3001
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: websocket-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SOCKETIO_URL=http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - socketio-server
    restart: unless-stopped

volumes:
  redis-data:
